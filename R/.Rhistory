library(devtools)
load_all()
library(testthat)
document()
load_all()
RowRanked1
es1
peps1
peps1
rankPEPsByCols
  rankPEP <- function(PVs, ESs)
    {
        sorter <- abs(PVs)
        pos <- ESs > 0
        pos[is.na(pos)] <- F
        sorter[pos] = -sorter[pos]        
        return(rank(sorter, ties.method = "random", na.last="keep"))
    }

peps1
  rankPEP <- function(PVs, ESs)
    {
        sorter <- abs(PVs)
        pos <- ESs > 0
        pos[is.na(pos)] <- F
        sorter[pos] = -sorter[pos]        
        return(rank(sorter, ties.method = "random", na.last="keep"))
    }

rankPEP(peps1[["PVmat"]][,1], peps1[["ESmat"]][,1])
rankPEP
PVs <- peps1[["PVmat"]][,1]
ESs <- peps1[["ESmat"]][,1]
sorter <- abs(PVs)
sorter
pos <- ESs>0
sorter[pos] =-sorter[pos]
sorter
rankPEP(peps1[["PVmat"]][,1], peps1[["ESmat"]][,1])
rankPEP(peps1[["PVmat"]][,1], peps1[["ESmat"]][,1])
rankPEP(peps1[["PVmat"]][,1], peps1[["ESmat"]][,1])
rankPEP(peps1[["PVmat"]][,1], peps1[["ESmat"]][,1])
peps1
rankPEP(peps1[["PVmat"]][,1], peps1[["ESmat"]][,1])
peps1
peps1
ColRanked1
peps3
ColRanked3
rankdj
randj
minid
minid
PVs
ESs
PGSEA(rp, 
colnames(peps1[[1]])
pgset <- c("(+)_chelidonine",  "(+)_isoprenaline")
pgste
pgset
PGSEA(rp, pgset)
ks.test(c(1,3),c(2,4,5))
ks.test(c(2,3),c(1,4,5))
ks.test(c(2,3),c(1,4,5))$p.value
ks.test(c(2,5),c(1,4,3))$p.value
testpws <- 
testpws
sample(pws, 1)
sample(1:length(pws), 1)
sample(1:length(testpws), 1)
dbs[randpws]
randDB
ranked
pesid
pwsid
inset
outset
res
PGSEA$ES
res$ES[[randDB]]
res$PV[[randDB]]
ks$ES
list(1)=="a"
class(list(1))
i <- 1
bgset
PGSEA(rp, pgset)
PGSEA(rp, pgset)
dbs
rp
sub
sub
sub
?setNames
sub
sub
GMSEA(rp, sub)
GMSEA(rp, sub)
GMSEA(rp, sub)
ranked
pgset
bgset
Q
GMSEA(rp, sub)
GMSEA(rp, sub)
GMSEA(rp, sub)
GMSEA(rp, sub)
bgset
length(bgset)
bgset=="all"
bgsets
bgset
bgsets
Q
GMSEA(rp, sub)
bgset
bgsets
bgset
Q
GMSEA(rp, sub)
bgset
pwset
Q
GMSEA(rp, sub)
bgsets
n
Q
GMSEA(rp, sub)
pws1
subpws
res
rankdh
randj
randj
randj
randj
peps
ranked
inset
outset
ks
res[[dbs[1]]]$ESmat
res[[dbs[1]]]$ES
res[[dbs[1]]]$ES[randj]
rankdj
randj
test()
unlink
test()
test()
load_all()
test()
test()
test()
load_all()
test()
load_all
load_all()
load_all()
test()
load_all()
test()
load_all()
test()
peps["ES"]
Q
load_all()
test()
load_all()
test()
load_all()
test()
peps[["ES"]]
rankingset
peps[["ES"]][rankingset, ]
c
rankingset
peps[["ES"]]
c
rankingset
Q
load_all()
test()
load_all()
test()
peps1
rankPEPsByCols
load_all()
rankPEPsByCols
res
ks
res$ES[[randDB]][pwsid]
pwsid
randi
pwsid
res$ES
res$ES
res
ks3
randj
inset
outset
ks
ks3
ranked
ranked
ranked
ranked
dbs[1]
dbs[]
dbs[3]
db3
res
subpws
db1
db3
load_all()
getDBlist(rp)
getDBlist(rp)
load_all()
test()
load_all()
test()
load_all()
test()
getDBlist(rp)
expected_db
expected_dbs
setequal(expected_db, getDBlist(rp))
setequal(expected_dbs, getDBlist(rp))
load_all()
setequal(expected_dbs, getDBlist(rp))
test()
load_all()
setequal(expected_dbs, getDBlist(rp))
test()
